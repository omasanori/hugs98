#! /bin/sh
CONTEXT_DIFF='diff -C2'
export CONTEXT_DIFF
DEV_NULL=/dev/null 
export DEV_NULL
HUGSFLAGS='-P../lib;../lib/hugs;../lib/exts'
export HUGSFLAGS
HUGS=../src/hugs

test_static() {
  echo "\
----------------------------------------------------------------
-- Testing syntax checking, static checking and modules.
-- This group of checks will produce about 100 lines of output of the form
-- 
-- -- !!! <description of feature being tested>
-- 
-- You should report a problem if any other output is generated.
----------------------------------------------------------------"

  # Test syntax/static checks on use of qualified names
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/qual1.hs"  "-o1static/qual1.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/qual2.hs"  "-o1static/qual2.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/qual3.hs"  "-o1static/qual3.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/qual4.hs"  "-o1static/qual4.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/qual5.hs"  "-o1static/qual5.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/syntax.hs" "-o1static/syntax.output"

  # ToDo: test for duplicate modules 
  perl runstdtest $HUGS -O-i +q -pHugs: -s12 "-Ostatic/mod1.hs"   "-o1static/mod1.output"
  perl runstdtest $HUGS -O-i +q -pHugs: -s12 "-Ostatic/mod2.hs"   "-o1static/mod2.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod3.hs"   "-o1static/mod3.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod4.hs"   "-o1static/mod4.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod5.hs"   "-o1static/mod5.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod6.hs"   "-o1static/mod6.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod7.hs"   "-o1static/mod7.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod8.hs"   "-o1static/mod8.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod9.hs"   "-o1static/mod9.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod10.hs"  "-o1static/mod10.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod11.hs"  "-o1static/mod11.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod12.hs"  "-o1static/mod12.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod13.hs"  "-o1static/mod13.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod14.hs"  "-o1static/mod14.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod15.hs"  "-o1static/mod15.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod16.hs"  "-o1static/mod16.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod17.hs"  "-o1static/mod17.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod18.hs"  "-o1static/mod18.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod19.hs"  "-o1static/mod19.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod20.hs"  "-o1static/mod20.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod21.hs"  "-o1static/mod21.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod22.hs"  "-o1static/mod22.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod23.hs"  "-o1static/mod23.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod24.hs"  "-o1static/mod24.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod25.hs"  "-o1static/mod25.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod26.hs"  "-o1static/mod26.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod27.hs"  "-o1static/mod27.output"
  perl runstdtest $HUGS +q -98 -pHugs: -s12 "-Ostatic/mod28.hs"  "-o1static/mod28.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod29.hs"  "-o1static/mod29.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod30.hs"  "-o1static/mod30.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod31.hs"  "-o1static/mod31.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod32.hs"  "-o1static/mod32.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod33.hs"  "-o1static/mod33.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod34.hs"  "-o1static/mod34.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod35.hs"  "-o1static/mod35.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod36.hs"  "-o1static/mod36.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod37.hs"  "-o1static/mod37.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod38.hs"  "-o1static/mod38.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod39.hs"  "-o1static/mod39.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod40.hs"  "-o1static/mod40.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod41.hs"  "-o1static/mod41.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod42.hs"  "-o1static/mod42.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod43.hs"  "-o1static/mod43.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod44.hs"  "-o1static/mod44.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod45.hs"  "-o1static/mod45.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod46.hs"  "-o1static/mod46.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod47.hs"  "-o1static/mod47.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod48.hs"  "-o1static/mod48.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod49.hs"  "-o1static/mod49.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod50.hs"  "-o1static/mod50.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod51.hs"  "-o1static/mod51.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod52.hs"  "-o1static/mod52.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod53.hs"  "-o1static/mod53.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod54.hs"  "-o1static/mod54.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod55.hs"  "-o1static/mod55.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod56.hs"  "-o1static/mod56.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod57.hs"  "-o1static/mod57.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod58.hs"  "-o1static/mod58.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod59.hs"  "-o1static/mod59.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod60.hs"  "-o1static/mod60.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod61.hs"  "-o1static/mod61.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod62.hs"  "-o1static/mod62.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod63.hs"  "-o1static/mod63.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod64.hs"  "-o1static/mod64.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod65.hs"  "-o1static/mod65.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod66.hs"  "-o1static/mod66.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod67.hs"  "-o1static/mod67.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod68.hs"  "-o1static/mod68.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod69.hs"  "-o1static/mod69.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod70.hs"  "-o1static/mod70.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod71.hs"  "-o1static/mod71.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod72.hs"  "-o1static/mod72.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod73.hs"  "-o1static/mod73.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod74.hs"  "-o1static/mod74.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod75.hs"  "-o1static/mod75.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod76.hs"  "-o1static/mod76.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod77.hs"  "-o1static/mod77.output"
  perl runstdtest $HUGS +q -98 -pHugs: -s12 "-Ostatic/mod78.hs"  "-o1static/mod78.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod79.hs"  "-o1static/mod79.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod80.hs"  "-o1static/mod80.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod81.hs"  "-o1static/mod81.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod82.hs"  "-o1static/mod82.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod83.hs"  "-o1static/mod83.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod84.hs"  "-o1static/mod84.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod85.hs"  "-o1static/mod85.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod86.hs"  "-o1static/mod86.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod87.hs"  "-o1static/mod87.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod88.hs"  "-o1static/mod88.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod89.hs"  "-o1static/mod89.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod90.hs"  "-o1static/mod90.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod91.hs"  "-o1static/mod91.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod92.hs"  "-o1static/mod92.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/mod93.hs"  "-o1static/mod93.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod94.hs"  "-o1static/mod94.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod95.hs"  "-o1static/mod95.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod96.hs"  "-o1static/mod96.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod95.hs"  "-o1static/mod95.o\
utput"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/mod96.hs"  "-o1static/mod96.o\
utput"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod97.hs"  "-o1static/mod97.o\
utput"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod98.hs"  "-o1static/mod98.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/mod99.hs"  "-o1static/mod99.output"

  # Check opaque import/export of tycons
  perl runstdtest $HUGS +q -pHugs: -s20 "-Ostatic/T2.hs"  "-o1static/T2.output"
  # Check transparent import of type synonyms
  perl runstdtest $HUGS +q -pHugs: -s17 "-Ostatic/T3.hs"  "-o1static/T3.output"

  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/export1.hs"  "-o1static/export1.output"

  # Check opaque import/export of member functions
  perl runstdtest $HUGS +q -pHugs: -s19 "-Ostatic/T7.hs"  "-o1static/Loaded.output"
  
  # Check handling of multi-platform newlines
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/PlainLF.hs"   "-o1static/PlainLF.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/PlainCRLF.hs" "-o1static/PlainCRLF.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Ostatic/PlainCR.hs"   "-o1static/PlainCR.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/LitLF.lhs"    "-o1static/LitLF.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/LitCRLF.lhs"  "-o1static/LitCRLF.output"
  perl runstdtest $HUGS +q -pHugs: -s16 "-Ostatic/LitCR.lhs"    "-o1static/LitCR.output"

} # End of static tests

test_tcheck() {

  echo "\
----------------------------------------------------------------
-- Testing type checking.
-- This group of checks will produce about 7 lines of output of the form
-- 
-- -- !!! <description of feature being tested>
-- 
-- It may also produce output that looks like this:
-- 
--   ./hugs +q -pHugs:  tcheck/dicts.hs < tcheck/dicts.input
--   expected stdout not matched by reality
--   *** tcheck/dicts.output  Fri Jul 11 13:25:27 1997
--   --- /tmp/runtest3584.3  Fri Jul 11 15:55:13 1997
--   ***************
--   *** 1,3 ****
--     Hugs:\"(14,14,14)\"
--   ! Hugs:Garbage collection recovered 239673 cells
--     Hugs:\"(14,14,14)\"
--   --- 1,3 ----
--     Hugs:\"(14,14,14)\"
--   ! Hugs:Garbage collection recovered 239622 cells
--     Hugs:\"(14,14,14)\"
-- 
-- This is harmless and might be caused by minor variations between different
-- machines, or slightly out of date sample output.
-- 
-- You should report a problem if any other output is generated.
----------------------------------------------------------------"

  perl runstdtest $HUGS +q -pHugs: -s17 "-Otcheck/types.hs"  "-o1tcheck/types.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Otcheck/dicts.hs"  "-itcheck/dicts.input" "-o1tcheck/dicts.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Otcheck/ty1.hs"    "-o1tcheck/ty1.output"
  perl runstdtest $HUGS +q -pHugs: -s12 "-Otcheck/ty2.hs"    "-o1tcheck/ty2.output"
#  perl runstdtest $HUGS +q -pHugs: -s12 "-Otcheck/monad.hs"  "-o1tcheck/monad.output"
  # Very tricky test - the input script uses /bin/cp to mimic the
  # effect of editing a file and reloading
  perl runstdtest $HUGS -w +q -pHugs: -s12 "-itcheck/DictHW.input" "-o1tcheck/DictHW.output"
  perl runstdtest $HUGS -w +q -pHugs: tcheck/TyErr.hs -s11 "-o1tcheck/TyErr.output"
}

test_rts() {

  echo "\
----------------------------------------------------------------
-- Testing runtime system.
-- This group of checks will produce 12-16 lines of output of the form
-- 
-- -- !!! <description of feature being tested>
-- 
-- It may also produce output that looks like this:
-- 
--   ./hugs +q -pHugs:  ./???.hs < ./???.input
--   expected stdout not matched by reality
--   *** ./???.output  Fri Jul 11 13:25:27 1997
--   --- /tmp/runtest3584.3  Fri Jul 11 15:55:13 1997
--   ***************
--   *** 1,3 ****
--     ...
--   | Hugs:\"[0.0, 0.304693, 0.643501, 1.5708]\"
--     ...
--   --- 1,3 ----
--     ...
--   | Hugs:\"[0.0, 0.30469323452, 0.643503234321, 1.5708234234]\"
--     ...
-- 
-- This is harmless and reflects variations in the accuracy of floating
-- point representation, calculations and printing.
-- 
-- You should report a problem if any other output is generated or if
-- the size of the floating point errors seem excessively large.
----------------------------------------------------------------"

  # Test bignums early since printing depends on bignums
  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/bignums.hs" "-irts/bignums.input" "-o1rts/bignums.output"

  # Using generic printer
  perl runstdtest $HUGS +q -pHugs: -u    -s17 "-Orts/print.hs"  "-irts/print.input" "-o1rts/print1.output"
  perl runstdtest $HUGS +q -pHugs: -u -f -s17 "-Orts/print.hs"  "-irts/print.input" "-o1rts/print2.output"
  #perl runstdtest $HUGS +q -pHugs: -u -f -s17 "-Orts/catch.hs"  "-irts/catch.input" "-o1rts/catch.output"
  perl runstdtest $HUGS +q -pHugs: -u    -s17 "-Orts/enum.hs"   "-irts/enum.input"  "-o1rts/enum.output1"
  perl runstdtest $HUGS +q -pHugs: -u   -s17 "-Orts/infix.hs"   "-irts/infix.input"  "-o1rts/infix.output"

  # Using derived show instance
  #perl runstdtest $HUGS +q -pHugs: +u -f -s17 "-Orts/catch2.hs" "-irts/catch.input" "-o1rts/catch2.output"

  # Using derived instances
  perl runstdtest $HUGS +q -pHugs: +u    -s17 "-Orts/enum.hs"   "-irts/enum.input"  "-o1rts/enum.output2"
  perl runstdtest $HUGS +q -pHugs: +u    -s17 "-Orts/maxint.hs"   "-irts/maxint.input"  "-o1rts/maxint.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/ord.hs" "-irts/ord.input" "-o1rts/ord.output"
  perl runstdtest $HUGS +q -pHugs: -s24 "-Orts/read.hs" "-irts/read.input" "-o1rts/read.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/arith.hs" "-irts/arith.input" "-o1rts/arith.output"

  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/testlist.hs"  "-irts/testlist.input" "-o1rts/testlist.output"

  perl runstdtest $HUGS +q -pHugs: -s28 "-Orts/arrayt.hs" "-irts/array1.input" "-o1rts/array1.output"
  perl runstdtest $HUGS +q -pHugs: -s28 "-Orts/array2.hs" "-irts/array2.input" "-o1rts/array2.output"
  perl runstdtest $HUGS +q -pHugs: -s28 "-Orts/arrayEx.hs" "-irts/arrayEx.input" "-o1rts/arrayEx.output"

  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/primexc.hs" "-irts/primexc.input" "-o1rts/primexc.output"

  perl runstdtest $HUGS +q -pHugs: -s34 "-Orts/refs.hs" "-irts/refs.input" "-o1rts/refs.output"
  perl runstdtest $HUGS +q -98 -pHugs: -s38 "-Orts/mutvars.hs" "-irts/mutvars.input" "-o1rts/mutvars.output"
  perl runstdtest $HUGS +q -pHugs: -s23 "-Orts/ioerror1.hs" "-irts/ioerror1.input" "-o1rts/ioerror1.output"
  perl runstdtest $HUGS +q -pHugs: -s17 "-Orts/ioerror2.hs" "-irts/ioerror2.input" "-o1rts/ioerror2.output"

  perl runstdtest $HUGS +q -pHugs: -s37 "-Orts/mvar.hs" "-irts/mvar.input" "-o1rts/mvar.output"

  # Old test code - it will probably get resurrected at some stage
  # 
  #   perl runstdtest $HUGS +q -pHugs: "-O./ptrEq.hs" "-i./ptrEq.input" "-o1./ptrEq.output"

  # /* Create an unreadable file (its impossible to supply one in a tar file!) */
  # cat >./unreadable.tst <<EOF
  # This file should be read-protected.
  #   perl runstdtests/iohandle.hs attempts to write it.
  # EOF
  # CHMOD 200 "./unreadable.tst"
  #   perl runstdtest $HUGS +q -pHugs: "-O./iohandle.hs" "-i./iohandle.input" "-o1./iohandle.output"
  # RM "./unreadable.tst"

  #   perl runstdtest $HUGS +q -pHugs:          "-O./gc.hs" "-i./gc1.input" "-o1./gc1.output"
  #   perl runstdtest $HUGS +q -pHugs: -H200000" "-O./gc.hs" "-i./gc1.input" "-o1./gc1.output"
  #   perl runstdtest $HUGS +q -pHugs: -H100000" "-O./gc.hs" "-i./gc2.input" "-o1./gc2.output"

} # End of test_rts

test_libs() {
  echo "\
----------------------------------------------------------------
-- Testing standard libraries for static errors and some old bugs.
-- 
-- This group of checks tests that each of the standard libraries
-- loads correctly.  This generates no output if it works.
-- It also tests the results generated by a few of the standard
-- libraries.  This produces the following output.
-- 
--   -- !!! Performing static tests on standard libraries - please wait
--   -- !!! Performing static tests on GHC-compatible libraries
--   -- !!! Performing static tests on other extension libraries
--   -- !!! Performing static tests on Hugs libraries
--   -- !!! Performing static tests on ths hslibs libraries
--   -- !!! Performing dynamic tests on libraries
--   -- !!! Testing (List.\\) and related functions
--   -- !!! Testing System
--   -- !!! Testing Int and Word
--   -- !!! Testing the IO module
--   -- !!! Testing the Directory module
--   -- !!! Testing IOExts.fixIO
--   -- !!! Testing Addr arithmetic and shows
--   -- !!! Testing derived Concurrency primitives and producer-consumer code
--   -- !!! Testing interaction of exception handling with threads
-- 
-- On Windows, it may also produce output that looks like this:
-- 
--   ./hugs +q -pHugs:  ./system1.hs < ./system1.input
--   expected stdout not matched by reality
--   *** ./system1.output  Fri Jul 11 13:25:27 1997
--   --- /tmp/runtest3584.3  Fri Jul 11 15:55:13 1997
--   ***************
--   *** 1,3 ****
--     ...
--   | Hugs:ExitFailure 1
--   | Hugs:ExitFailure 2
--     ...
--   --- 1,3 ----
--     ...
--   | Hugs:ExitSuccess
--   | Hugs:ExitSuccess
--     ...
-- 
-- This reflects the sad fact that System.system always returns
-- ExitSuccess on DOS machines.  This is a known bug in DOS.
-- 
-- You should report a problem if any other output is generated.
----------------------------------------------------------------"

  echo "-- !!! Performing static tests on standard libraries - please wait"
  perl runstdtest $HUGS +q -pHugs: Array   -s24 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Char    -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Complex -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: IO      -s19 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Ix      -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: List    -s19 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Locale  -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Maybe   -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Monad   -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Numeric -s31 "-o1libs/Loaded.output"
# Did I miss Quote being added to the library report???
# And how come it requires -98 if it's standard??
  perl runstdtest $HUGS +q -98 -pHugs: Quote -s22 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Random    -s40 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Ratio     -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: System    -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Directory -s40 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: CPUTime   -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Locale    -s16 "-o1libs/Loaded.output"

  echo "-- !!! Performing static tests on GHC-compatible libraries"
  perl runstdtest $HUGS +q -pHugs: Addr       -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Bits       -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Concurrent -s51 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Dynamic    -s33 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Exception  -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Foreign    -s19 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: GetOpt     -s22 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: IOExts     -s30 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Int        -s19 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -98 -pHugs: LazyST -s34 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: NumExts    -s19 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Pretty     -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -98 -pHugs: ST     -s34 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Stable     -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Weak       -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Word       -s38 "-o1libs/Loaded.output"

  echo "-- !!! Performing static tests on other extension libraries"
  perl runstdtest $HUGS +q -98 -pHugs: Memo   -s37 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: MonadRec   -s16 "-o1libs/Loaded.output"
  perl runstdtest $HUGS +q -pHugs: Observe    -s16 "-o1libs/Loaded.output"

  echo "-- !!! Performing static tests on Hugs libraries"
  perl runstdtest $HUGS +q -98 -pHugs: HugsLibs -s67 "-o1libs/HugsLibs.output"

  echo "-- !!! Performing static tests on the hslibs libraries"
  perl runstdtest $HUGS +q -98 -pHugs: ../lib/exts/*.hs ../lib/exts/*.lhs -s261 "-o1libs/Loaded.output"


  echo "-- !!! Performing dynamic tests on libraries"
  # Specific tests - checking that old bugs have been fixed 
  perl runstdtest $HUGS +q -pHugs: List    -s21 "-Olibs/list1.hs" "-ilibs/list1.input" "-o1libs/list1.output"
  perl runstdtest $HUGS +q -pHugs: System  -s18 "-Olibs/system1.hs" "-ilibs/system1.input" "-o1libs/system1.output"
  perl runstdtest $HUGS +q -pHugs: Complex -s16 "-ilibs/complex1.input" "-o1libs/complex1.output"
  perl runstdtest $HUGS +q -pHugs: Int     -s42 "-Olibs/intTest.hs" "-ilibs/intTest.input" "-o1libs/intTest.output"
  perl runstdtest $HUGS +q -pHugs: IO      -s44 "-Olibs/ioTest1.hs" "-ilibs/ioTest1.input" "-o1libs/ioTest1.output"
  perl runstdtest $HUGS +q -pHugs: Directory -s43 "-Olibs/dirTest.hs" "-ilibs/dirTest.input" "-o1libs/dirTest.output"
  perl runstdtest $HUGS +q -pHugs: libs/FixIO.lhs -s35 "-ilibs/FixIO.input" "-o1libs/FixIO.output"
  perl runstdtest $HUGS +q -pHugs: libs/testAddr.hs -s20 "-ilibs/Addr.input" "-o1libs/Addr.output"
  perl runstdtest $HUGS +q -pHugs: libs/prodcon.hs -s55 "-ilibs/prodcon.input" "-o1libs/prodcon.output"
  perl runstdtest $HUGS +q -pHugs: libs/except1.hs -s55 "-ilibs/except1.input" "-o1libs/except1.output"

} # End of test_libs

test_demos() {
  echo "\
----------------------------------------------------------------
-- Testing demos for static errors.
-- 
-- This group of checks tests that each of the demos loads correctly.
-- It should generate this output:
-- 
--   -- !!! Performing static checks on demos
-- 
-- You should report a problem if any other output is generated.
----------------------------------------------------------------"

  echo "-- !!! Performing static checks on demos"
  perl runstdtest $HUGS -w +q -98 -pHugs: ../demos/Demos       -s56 "-o1demos/Loaded.output"
  perl runstdtest $HUGS -w +q -pHugs: ../demos/prolog/Main -s22 "-o1demos/Loaded.output"

} # End of test demos

test_temp() {
  echo "\
----------------------------------------------------------------
-- Testing temporary tests
-- These aren't invoked by the usual "make check" - they serve
-- as a marshalling area when adding new tests
----------------------------------------------------------------"
} # End of test temp

for arg
do
  case "$arg" in
  static) test_static;;
  tcheck) test_tcheck;;
  rts)    test_rts;;
  libs)   test_libs;;
  demos)  test_demos;;
  temp)   test_temp;;
  *)      echo Unknown test $arg;;
  esac
done

echo "----------------------------------------------------------------"
