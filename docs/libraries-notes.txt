Using Hugs with the new hierarchical libraries

Most of the new libraries shipped with GHC 5.04 may also be used with Hugs.

Some assembly is required:
(These instructions are for Unix, I imagine cygwin is similar)

o You'll need a copy of both hslibs and libraries from CVS (see
  http://www.haskell.org/ghc/docs/latest/html/building/sec-cvs.html
  for details on how to get this.)  Leave these two directories in
  a single directory

o in src/unix, run

	convert_libraries <directory where libraries lives>

  This will fill in libraries with converted modules, and also create
  a directory oldlib for compatability with the old Hugs extension
  libraries: mosty stubs, plus some old modules.

o back in src, run

	make install_libraries

  or, if you'll be using the FFI,

	make install_libraries_ffi

o That's it.  Now you can run hugs with
 
	hugs -P'{Hugs}/libraries:{Hugs}/oldlib:{Hugs}/lib/hugs'
 
  That should be fairly compatible both with GHC 5.04 and with the older
  Hugs libraries.  If you only want compatability with GHC 5.04, you need
  only the first directory in the path.  Some modules also need -98;
  in that case you'll also need -W which disables the old syntax for
  implicit parameters using "with" and "dlet" -- some modules use "with"
  as an identifier.

To run the test suite, in tests:

	HUGSFLAGS='-W -P{Hugs}/libraries:{Hugs}/oldlib:{Hugs}/lib/hugs'
	export HUGSFLAGS
	sh testScript static tcheck rts ffi libs demos

More details:

o libraries/Hugs contains some Hugs-only modules (e.g. Hugs.IO), mostly
  modified versions of modules from lib.

o everything else under libraries, and all of oldlib, are created by the
  convert_libraries script (so don't edit them).

o Some of the low-level modules under Foreign are minimal (sometimes
  empty) placeholders.  (They are generated from originals in lib/exts:
  CString, CTypes and Storable.)  Hopefully someone will fix this later.

o to see what's handled and what's not, have a look at the conversion script
  src/unix/convert_libraries.  It's quite a kludge, but it mostly works,
  though there's still plenty to do.
