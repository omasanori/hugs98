Using Hugs with the new hierarchical libraries

Hugs comes with its traditional libraries, and is configured to use
these by default.  However it also comes with a second, alternative,
set of libraries, comprising
- most of the new hierarchical libraries shipped with GHC 5.04, and
- a collection of stub modules providing the old interface, but
  implemented by importing hierarchical modules.  For example there
  is a module MonadReader that merely imports and re-exports the
  hierarchical module Control.Monad.Reader.
This version also features a Haskell 98-compliant Prelude (unlike the
traditional libraries.)  For example, functions like isDigit are no
longer exported by the Prelude.

The traditional libraries will disappear when this new setup has had
more testing, though the compatibility stubs will be kept for a while.

To use the new setup, set HUGSFLAGS to

	-W -P{Hugs}/libraries:{Hugs}/oldlib:{Hugs}/lib/hugs

(The -W option disables the old syntax for implicit parameters using
"with" and "dlet" -- some modules use "with" as an identifier.)
Do not add {Hugs}/lib or {Hugs}/lib/exts to this path -- Hugs will
become very confused by multiple versions of the same modules.
Some modules also require the -98 option.

More details:

o To use TRex with the new setup, import Hugs.TRex

o The Int and Word modules contain deprecated conversion functions, which
  will disappear in future releases.

o libraries/Hugs contains some Hugs-only modules (e.g. Hugs.IO), mostly
  modified versions of modules from lib.

o everything else under libraries, and all of oldlib, are created by the
  src/unix/convert_libraries script (so don't edit them).

o To check the status of each hierarchical module, run

	src/unix/test_libraries <directory where libraries lives>

o to see what's handled and what's not, have a look at the conversion script
  src/unix/convert_libraries.  It's quite a kludge, but it mostly works,
  though there's still plenty to do.
