# @configure_input@
################################################################
# Conversion of libraries from raw sources in the fptools tree
# (this should be a POSIX 1003.2-1992 Makefile)
################################################################

@MkDefs@

# We use the autoconf-supplied install-sh to create directories
# but use /bin/cp to copy data because install-sh can't copy
# multiple files at once.

INSTALL		= ../install-sh
INSTALL_DATA	= /bin/cp
CPPFLAGS	= -D__HUGS__ -D$(HOST_OS)_HOST_OS -D$(HOST_OS)_TARGET_OS

BUILD_DIR	= ../hugsdir

HEADERS		= ../src/HsFFI.h
FP_HEADERS	= ../src/platform.h include/MachDeps.h include/ghcconfig.h

# a file created by make include
INCLUDES	= $(BUILD_DIR)/include/HsFFI.h

# We use a bootstrap procedure to construct the libraries:
#
# 1. Preprocess hugsbase, base, haskell98 and Cabal into bootlibs
#    using the shell script make_bootlibs.  The result is incomplete,
#    in particular because hsc2hs wasn't available yet, but it's enough
#    to get ffihugs, runhugs, hsc2hs and Cabal working,
#
# 2. Build all the packages into ../hugsdir, using Cabal.
#
# Unfortunately that means building (and configuring) base twice.

HSC2HS		= tools/hsc2hs
CPPHS		= tools/cpphs
MAKE_BOOT	= tools/make_bootlib
CONVERT		= tools/convert_libraries

all: $(BUILD_DIR)/.stamp

$(BUILD_DIR)/.stamp: bootlib/.stamp $(INCLUDES) $(HSC2HS) $(CONVERT)
	$(RM) -r $(BUILD_DIR)/libraries $(BUILD_DIR)/packages $(BUILD_DIR)/oldlib
	cd ..; libraries/$(CONVERT) fptools hugsdir
	echo timestamp for libraries >$@

bootlib/.stamp: hugsbase/Hugs/*.* $(MAKE_BOOT) $(INCLUDES) $(CPPHS)
	CPPFLAGS='$(CPPFLAGS)' $(MAKE_BOOT)
	echo timestamp for bootlib >$@

$(HSC2HS): ../fptools/ghc/utils/hsc2hs/Main.hs $(BOOTLIB) $(INCLUDES) $(CPPHS)
	test -d hsc2hs || mkdir hsc2hs
	$(CPPHS) $(CPPFLAGS) ../fptools/ghc/utils/hsc2hs/Main.hs hsc2hs/Main.hs
	cp ../fptools/ghc/utils/hsc2hs/template-hsc.h hsc2hs/template-hsc.h
	(echo '#! /bin/sh'; \
	 echo "libdir='`pwd`'"; \
	 echo '$$libdir/../src/runhugs -P$$libdir/bootlib $$libdir/hsc2hs/Main.hs -I$$libdir/../hugsdir/include "$$@"') >$@
	chmod 755 $@

$(CPPHS): $(CPPHS).sh
	sed 's:<HUGSDIR>:$(hugsdir):' $(CPPHS).sh >$@
	chmod 755 $@

$(INCLUDES): $(HEADERS)
	mkdir -p $(BUILD_DIR)/include
	$(CP) $(HEADERS) $(BUILD_DIR)/include
	mkdir -p ../fptools/ghc/includes
	$(CP) $(FP_HEADERS) ../fptools/ghc/includes

clean:
	$(RM) LibStatus

distclean: clean
	$(RM) -r bootlib
	$(RM) -r $(BUILD_DIR)
	$(RM) config.log config.status
	$(RM) -r autom4te.cache
	$(RM) a.out
	$(RM) include/ghcconfig.h
	$(RM) Makefile
	$(RM) tools/config tools/cpphs.sh
	$(RM) tools/cpphs
	$(RM) -r hsc2hs
	$(RM) tools/hsc2hs
	$(RM) hugsbase/.setup-config hugsbase/.installed-pkg-config
	$(RM) -r ../fptools/ghc/includes

veryclean: distclean

install: all
	$(INSTALL) -d $(DESTDIR)$(hugsdir)/include
	$(INSTALL_DATA) $(BUILD_DIR)/include/* $(DESTDIR)$(hugsdir)/include
	$(INSTALL) -d $(DESTDIR)$(hugsdir)/oldlib
	$(INSTALL_DATA) $(BUILD_DIR)/oldlib/* $(DESTDIR)$(hugsdir)/oldlib
	(cd $(BUILD_DIR); find libraries -type f -print) | while read file;\
		do	dir=`dirname $$file`;\
			case $$file in \
			*.hs|*.lhs|*.so|*.dll) \
				$(INSTALL) -d $(DESTDIR)$(hugsdir)/$$dir;\
				$(INSTALL) -c -m 0644 $(BUILD_DIR)/$$file $(DESTDIR)$(hugsdir)/$$file ;;\
			esac \
		done
	(cd $(BUILD_DIR); find packages -type f -print) | while read file;\
		do	dir=`dirname $$file`;\
			$(INSTALL) -d $(DESTDIR)$(hugsdir)/$$dir;\
			$(INSTALL) -c -m 0644 $(BUILD_DIR)/$$file $(DESTDIR)$(hugsdir)/$$file;\
		done
	(cd $(BUILD_DIR); find demos -type f -print) | while read file;\
		do	dir=`dirname $$file`;\
			$(INSTALL) -d $(DESTDIR)$(hugsdir)/$$dir;\
			$(INSTALL) -c -m 0644 $(BUILD_DIR)/$$file $(DESTDIR)$(hugsdir)/$$file;\
		done
	$(INSTALL) -d $(DESTDIR)$(hugsdir)/programs/hsc2hs
	$(INSTALL_DATA) hsc2hs/Main.hs hsc2hs/template-hsc.h $(DESTDIR)$(hugsdir)/programs/hsc2hs
	(echo '#! /bin/sh'; \
	 echo 'runhugs $(hugsdir)/programs/hsc2hs/Main.hs -I$(hugsdir)/include "$$@"') >$(DESTDIR)$(bindir)/hsc2hs-hugs
	chmod 755 $(DESTDIR)$(bindir)/hsc2hs-hugs
	$(INSTALL) -c $(CPPHS) $(DESTDIR)$(bindir)/cpphs-hugs

LibStatus: all
	tools/test_libraries ../fptools >$@
