# --------------------------------------------------------------------------
# Makefile for Hugs
#
# The Hugs 98 system is Copyright (c) Mark P Jones, Alastair Reid, the
# Yale Haskell Group, and the OGI School of Science & Engineering at OHSU,
# 1994-2002, All rights reserved.  It is distributed as
# free software under the license in the file "License", which is
# included in the distribution.
# --------------------------------------------------------------------------

# Targets:
#
# <default>:   	 make hugs@EXE@ and runhugs@EXE@
# libraries:	 generate libraries from fptools raw sources
#		 (located in $(FPTOOLS))
# install:	 make and install programs/libraries
# hugs@EXE@:    	 make minimal working system
# runhugs@EXE@:	 make batch-mode version of Hugs
# clean:       	 delete files not required in running system
# distclean:     delete files that can be regenerated using C compiler
# veryclean:     delete all machine generated files 
#                  (you need perl, bison/yacc, etc to rebuild these files)
# check:	 run regression tests
# TAGS:          build emacs TAGS table

# This rule goes first to make it the default choice
default		:: hugs@EXE@ runhugs@EXE@

CC		= @CC@
CFLAGS		= @CFLAGS@ @DEBUGFLAGS@ @MTCFLAGS@
OPTFLAGS	= @OPTFLAGS@

LD		= @LD@
LDFLAGS    	= @LDFLAGS@  @LDDEBUGFLAGS@
LIBS		= @LIBS@

YACC		= @YACC@
RM		= @RM@
CP		= @CP@
EXE		= @EXE@

FPTOOLS		= @FPTOOLS@

@SET_INSTALLDIRS@

.SUFFIXES	:
.SUFFIXES	: .c .h @OBJ@
HFILES		= prelude.h config.h options.h storage.h connect.h \
		  errors.h command.h server.h subst.h HsFFI.h
CFILES		= hugs.c storage.c input.c static.c type.c subst.c \
		  output.c compiler.c machine.c builtin.c server.c \
		  ffi.c
INCFILES	= parser.c preds.c bignums.c machdep.c timer.c scc.c \
		  printer.c iomonad.c interns.c stmonad.c array.c
YFILES		= parser.y
SOURCES		= $(HFILES) $(CFILES) $(INCFILES) $(YFILES) 
OBJECTS		= storage@OBJ@ input@OBJ@    static@OBJ@ type@OBJ@    \
		  subst@OBJ@   compiler@OBJ@ plugin@OBJ@ builtin@OBJ@ \
		  machine@OBJ@ output@OBJ@ ffi@OBJ@
IOBJECTS	= hugs@OBJ@ $(OBJECTS)
PRELUDE		= config.h options.h prelude.h

################################################################
# Hugs interpreter and standalone evaluator
################################################################

hugs@EXE@	: $(IOBJECTS) @WOBJECTS@ @RC_FILES@
		  $(CC) $(LDFLAGS) $(IOBJECTS) @WOBJECTS@ $(LIBS) -o hugs@EXE@ 
		  @STRIP@

SERVER_OBJECTS	= server@OBJ@ $(OBJECTS) 
runhugs@OBJ@	: $(PRELUDE) hugs.c machdep.c timer.c runhugs.c
runhugs@EXE@	: runhugs@OBJ@ $(SERVER_OBJECTS)
		  $(CC) $(LDFLAGS) runhugs@OBJ@ $(SERVER_OBJECTS) $(LIBS) -o runhugs@EXE@

ffihugs@OBJ@	: $(PRELUDE) hugs.c machdep.c timer.c runhugs.c
ffihugs@EXE@	: ffihugs@OBJ@ $(SERVER_OBJECTS)
		  $(CC) $(LDFLAGS) ffihugs@OBJ@ $(SERVER_OBJECTS) $(LIBS) -o ffihugs@EXE@

ffihugs@OBJ@	: runhugs.c
		  $(CC) -c $(CFLAGS) $(OPTFLAGS) -DFFI_COMPILER runhugs.c -o ffihugs@OBJ@

################################################################
# Libraries, converted from raw sources out of the fptools tree
################################################################

libraries	: $(FPTOOLS)
		  cd unix; ./convert_hslibs $(FPTOOLS)
		  cd unix; ./convert_libraries $(FPTOOLS)

################################################################
# Clean, distclean, veryclean, TAGS
################################################################

clean		::
		  $(RM) hugs@EXE@
		  $(RM) runhugs@EXE@
		  $(RM) ffihugs@EXE@
		  $(RM) *.o
		  $(RM) *.O
		  $(RM) *.obj
		  $(RM) *.OBJ
		  $(RM) *.LIB
		  $(RM) *.DEF
		  $(RM) *.RES
		  $(RM) *.EXP
		  $(RM) *.ILK
		  $(RM) *.PDB
		  $(RM) *.TD2
		  $(RM) *.MAP
		  $(RM) *.CSM
		  $(RM) *.TR2
		  $(RM) *.DSW
		  $(RM) *.aux
		  $(RM) *.hp
distclean	:: clean
distclean	::
		  $(RM) hugs@EXE@
		  $(RM) runhugs@EXE@
		  $(RM) ffihugs@EXE@
		  $(RM) *.pdf
		  $(RM) TAGS
		  $(RM) *~
veryclean	:: distclean
veryclean	::
		  $(RM) Makefile
		  $(RM) config.h
		  $(RM) options.h
		  $(RM) unix/config.cache
		  $(RM) unix/config.log
		  $(RM) unix/config.status
		  $(RM) unix/configure
TAGS		::
		  etags *.[ych]

################################################################
# Dependencies
################################################################

.c@OBJ@	:
		  $(CC) -c $(CFLAGS) $(OPTFLAGS) $<

# These are compiled with less optimisation to avoid optimisation bugs in
# certain compilers.  This may be overly conservative on some compilers.
compiler@OBJ@	: compiler.c
		  $(CC) -c $(CFLAGS) compiler.c
static@OBJ@	: static.c
		  $(CC) -c $(CFLAGS) static.c
type@OBJ@	: type.c
		  $(CC) -c $(CFLAGS) type.c

parser.c	: parser.y
		  -$(YACC) parser.y
		  mv y.tab.c parser.c
# veryclean	::
# 		  $(RM) parser.c

server@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h version.h \
		  command.h machdep.c timer.c hugs.c server.c server.h
hugs@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h version.h \
		  command.h machdep.c timer.c
storage@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h
input@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h \
		  parser.c command.h   
subst@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h subst.h
static@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h subst.h \
		  scc.c		       
type@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h subst.h \
		  preds.c scc.c	       
output@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h
compiler@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h 
machine@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h
plugin@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h
builtin@OBJ@	: $(PRELUDE) storage.h HsFFI.h connect.h errors.h \
		  bignums.c printer.c iomonad.c interns.c stmonad.c array.c dirprim.c timeprim.c

################################################################
# Regression tests (none supplied)
################################################################

check		:


@MkInstall@

################################################################
# End of Makefile
################################################################
